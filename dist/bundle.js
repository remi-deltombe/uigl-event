!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),o(n(1),t)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Event=void 0;var r=n(2),o=function(){function e(){}return e.prototype.subscribe=function(e){var t=new r.Subscription(this,e);return this.head&&(this.head.prev=t,t.next=this.head),this.head=t,t},e.prototype.fire=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var n=this.head;n;)console.log(n),n.call.apply(n,e),n=n.next},e.prototype.unsubscribe=function(e){e.next&&(e.next.prev=e.prev),e.prev&&(e.prev.next=e.next),e===this.head&&(this.head=e.next)},e}();t.Event=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Subscription=void 0;var r=function(){function e(e,t){this.event=e,this.callback=t}return e.prototype.call=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.callback.apply(null,e)},e.prototype.cancel=function(){this.event.unsubscribe(this)},e}();t.Subscription=r}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,